- hosts: masters
  vars_files:
    - "../../../LaunchZones/K8s/global-config.vars"
  become: yes # Run as root
  # Make sure to change this
  become_user: "{{ become_user_setting }}"
  tasks:
    # First we ensure Dependencies are met.
    - name: Pre-Launch Task ... Package already deployed?
      shell: |
        kubectl get namespace {{ metallb_namespace }} --ignore-not-found
      register: metallb_alreadydeployed_check
      ignore_errors: yes
      args:
        executable: /bin/bash
    - block:
        - name: Pre-Launch Task ... Add Metallb Repo
          kubernetes.core.helm_repository:
            name: metallb
            repo_url: "{{ metallb_helm_chart_url }}"
        - name: Pre-Launch Task ... Prep Metallb system config
          shell: 'kubectl get configmap kube-proxy -n kube-system -o yaml | sed -e "s/strictARP: false/strictARP: true/" | kubectl apply -f - -n kube-system'
        - name: Pre-Launch Task ... Install Metallb
          kubernetes.core.helm:
            name: my-metallb
            namespace: "{{ metallb_namespace }}"
            chart_ref: "{{ metallb_chart_ref }}"
            create_namespace: true
            wait: true
        - name: Launch Task ... Apply Metallb IP address pool YML file
          shell: |
            kubectl apply -f - <<EOF
            apiVersion: metallb.io/v1beta1
            kind: IPAddressPool
            metadata:
              name: "{{ metallb_ipaddresspool_name }}"
              namespace: "{{ metallb_namespace }}"
            spec:
              addresses:
              - {{ metallb_dhcp_start_range }}-{{ metallb_dhcp_end_range }}
            EOF
        - name: Launch Task ... Apply Metallb L2Advertisement YML file
          shell: |
            kubectl apply -f - <<EOF
            apiVersion: metallb.io/v1beta1
            kind: L2Advertisement
            metadata:
              name: "{{ metallb_l2advertisement_name }}"
              namespace: "{{ metallb_namespace }}"
            spec:
              ipAddressPools:
              - "{{ metallb_ipaddresspool_name }}"
            EOF
      when: metallb_alreadydeployed_check.stdout == ""
